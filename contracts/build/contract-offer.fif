"Asm.fif" include
// automatically generated from `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\error_codes.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\math.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\stdlib.func` `D:\TON_FunC\ratelance\contracts\func\offer-contract.fc` incl:`func/stdlib-ext.fc` incl:`func/opcodes.fc` incl:`func/tlb.fc` 
PROGRAM{
  DECLPROC power
  DECLPROC sqrt
  DECLPROC avg
  DECLPROC exp
  DECLPROC log2
  DECLPROC load_bounced_sender
  DECLPROC send_to_rbounceable
  DECLPROC send_to
  DECLPROC send_text
  DECLPROC mode::forward_value
  DECLPROC mode::pay_transfer
  DECLPROC mode::destroy_into
  DECLPROC job::ld_tag
  DECLPROC job::ld_unlocked
  DECLPROC offer::ld_tag
  DECLPROC offer::ld_unlocked
  DECLPROC job::ld_msg_lock_on
  DECLPROC job::st_msg_collapse
  DECLPROC job::st_locked
  DECLPROC job::ld_locked
  DECLPROC offer::ld_msg_collapse
  DECLPROC offer::st_msg_take_stake
  DECLPROC offer::st_locked
  DECLPROC offer::ld_locked
  DECLPROC offer::st_msg_unplug
  DECLPROC offer::st_msg_lock_success
  DECLPROC job::ld_msg_lock_success
  DECLPROC offer::st_msg_lock_failed
  DECLPROC offer::st_unlocked
  DECLPROC job::st_unlocked
  DECLPROC job::st_working
  DECLPROC job::ld_working_main
  DECLPROC job::wrap_for_signing
  DECLPROC job::parse_proposal_with_tag
  DECLPROC job::parse_finish_message
  DECLPROC recv_internal
  power PROCREF:<{
    //  x exponent
    OVER	//  x exponent x
    0 EQINT	//  x exponent _3
    IFJMP:<{	//  x exponent
      2DROP	// 
      0 PUSHINT	//  _4=0
    }>	//  x exponent
    DUP	//  x exponent exponent
    0 EQINT	//  x exponent _6
    IFJMP:<{	//  x exponent
      2DROP	// 
      1 PUSHINT	//  _7=1
    }>	//  x exponent
    OVER	//  x counter result
    WHILE:<{
      OVER	//  x counter result counter
      1 GTINT	//  x counter result _11
    }>DO<{	//  x counter result
      s2 PUSH	//  x counter result x
      MUL	//  x counter result
      SWAP	//  x result counter
      DEC	//  x result counter
      SWAP	//  x counter result
    }>	//  x counter result
    2 1 BLKDROP2	//  result
  }>
  sqrt PROCREF:<{
    //  x
    DUP	//  x x
    0 EQINT	//  x _2
    IFJMP:<{	//  x
      DROP	// 
      0 PUSHINT	//  _3=0
    }>	//  x
    DUP	//  x x
    4 LESSINT	//  x _5
    IFJMP:<{	//  x
      DROP	// 
      1 PUSHINT	//  _6=1
    }>	//  x
    DUP	//  x x
    INC	//  x _9
    1 RSHIFT#	//  x z
    OVER	//  x z y
    WHILE:<{
      2DUP	//  x z y z y
      LESS	//  x z y _13
    }>DO<{	//  x z y
      DROP	//  x z
      s0 s1 s0 PUSH3	//  x z y x z
      DIV	//  x z y _14
      ROT	//  x y _14 z
      ADD	//  x y _15
      1 RSHIFT#	//  x y z
      SWAP	//  x z y
    }>	//  x z y
    2 1 BLKDROP2	//  y
  }>
  avg PROCREF:<{
    //  x y
    ADD	//  _2
    1 RSHIFT#	//  _4
  }>
  exp PROCREF:<{
    //  x
    DUP	//  x x
    -1 GTINT	//  x _2
    IF:<{	//  x
      POW2	//  _3
    }>ELSE<{	//  x
      1 PUSHINT	//  x _6=1
      SWAP	//  _6=1 x
      NEGATE	//  _6=1 _8
      RSHIFT	//  _3
    }>
  }>
  log2 PROCREF:<{
    //  x
    0 PUSHINT	//  x n=0
    7 PUSHPOW2	//  x n=0 _3=128
    exp INLINECALLDICT	//  x n=0 _4
    s2 s(-1) PUXC	//  x n=0 x _4
    GEQ	//  x n=0 _5
    IF:<{	//  x n=0
      DROP	//  x
      128 RSHIFT#	//  x
      7 PUSHPOW2	//  x n
    }>	//  x n
    64 PUSHINT	//  x n _10=64
    exp INLINECALLDICT	//  x n _11
    s2 s(-1) PUXC	//  x n x _11
    GEQ	//  x n _12
    IF:<{	//  x n
      SWAP	//  n x
      64 RSHIFT#	//  n x
      SWAP	//  x n
      64 ADDCONST	//  x n
    }>	//  x n
    32 PUSHINT	//  x n _17=32
    exp INLINECALLDICT	//  x n _18
    s2 s(-1) PUXC	//  x n x _18
    GEQ	//  x n _19
    IF:<{	//  x n
      SWAP	//  n x
      32 RSHIFT#	//  n x
      SWAP	//  x n
      32 ADDCONST	//  x n
    }>	//  x n
    16 PUSHINT	//  x n _24=16
    exp INLINECALLDICT	//  x n _25
    s2 s(-1) PUXC	//  x n x _25
    GEQ	//  x n _26
    IF:<{	//  x n
      SWAP	//  n x
      16 RSHIFT#	//  n x
      SWAP	//  x n
      16 ADDCONST	//  x n
    }>	//  x n
    8 PUSHINT	//  x n _31=8
    exp INLINECALLDICT	//  x n _32
    s2 s(-1) PUXC	//  x n x _32
    GEQ	//  x n _33
    IF:<{	//  x n
      SWAP	//  n x
      8 RSHIFT#	//  n x
      SWAP	//  x n
      8 ADDCONST	//  x n
    }>	//  x n
    4 PUSHINT	//  x n _38=4
    exp INLINECALLDICT	//  x n _39
    s2 s(-1) PUXC	//  x n x _39
    GEQ	//  x n _40
    IF:<{	//  x n
      SWAP	//  n x
      4 RSHIFT#	//  n x
      SWAP	//  x n
      4 ADDCONST	//  x n
    }>	//  x n
    2 PUSHINT	//  x n _45=2
    exp INLINECALLDICT	//  x n _46
    s2 s(-1) PUXC	//  x n x _46
    GEQ	//  x n _47
    IF:<{	//  x n
      SWAP	//  n x
      2 RSHIFT#	//  n x
      SWAP	//  x n
      2 ADDCONST	//  x n
    }>	//  x n
    1 PUSHINT	//  x n _52=1
    exp INLINECALLDICT	//  x n _53
    s1 s2 XCHG	//  n x _53
    GEQ	//  n _54
    IF:<{	//  n
      INC	//  n
    }>	//  n
  }>
  load_bounced_sender PROCINLINE:<{
    //  in_msg
    CTOS	//  in_msg
    4 LDU	//  _4 in_msg
    SWAP
    1 PUSHINT	//  in_msg _4 _7=1
    AND	//  in_msg b
    SWAP	//  b in_msg
    LDMSGADDR	//  b _14 _13
    DROP	//  b _9
  }>
  send_to_rbounceable PROCINLINE:<{
    //  packed_mode bounce dest value a m
    //  mode bounce dest value a m
    NEWC	//  mode bounce dest value a m _8
    -ROT	//  mode bounce dest value _8 a m
    2 1 CALLXARGS	//  mode bounce dest value _9
    ENDC	//  mode bounce dest value _10
    1 PUSHINT	//  mode bounce dest value _10 _11=1
    16 PUSHINT	//  mode bounce dest value _10 _11=1 _12=16
    s0 s5 XCHG	//  mode _12=16 dest value _10 _11=1 bounce
    IF:<{	//  mode _12=16 dest value _10 _11=1
      8 PUSHINT	//  mode _12=16 dest value _10 _11=1 _13=8
    }>ELSE<{	//  mode _12=16 dest value _10 _11=1
      0 PUSHINT	//  mode _12=16 dest value _10 _11=1 _13=0
    }>
    s1 s5 XCHG	//  mode _11=1 dest value _10 _12=16 _13
    OR	//  mode _11=1 dest value _10 _16
    NEWC	//  mode _11=1 dest value _10 _16 _17
    6 STU	//  mode _11=1 dest value _10 _19
    s0 s3 XCHG2	//  mode _11=1 _10 value _19 dest
    STSLICER	//  mode _11=1 _10 value _20
    SWAP	//  mode _11=1 _10 _20 value
    STVARUINT16	//  mode _11=1 _10 _21
    s1 s2 XCHG	//  mode _10 _11=1 _21
    107 STU	//  mode _10 _23
    STREF	//  mode _24
    ENDC	//  mode _25
    SWAP	//  _25 mode
    SENDRAWMSG
  }>
  send_to PROCINLINE:<{
    //  packed_mode dest value a m
    0 PUSHINT	//  packed_mode dest value a m _5=0
    4 -ROLL	//  packed_mode _5=0 dest value a m
    send_to_rbounceable INLINECALLDICT
  }>
  send_text PROCINLINE:<{
    //  packed_mode dest value body
    //  mode dest value body
    0 PUSHINT	//  mode dest value body _6=0
    16 PUSHINT	//  mode dest value body _6=0 _7=16
    NEWC	//  mode dest value body _6=0 _7=16 _8
    6 STU	//  mode dest value body _6=0 _10
    s0 s4 XCHG2	//  mode _6=0 value body _10 dest
    STSLICER	//  mode _6=0 value body _11
    ROT	//  mode _6=0 body _11 value
    STVARUINT16	//  mode _6=0 body _12
    s1 s2 XCHG	//  mode body _6=0 _12
    139 STU	//  mode body _16
    SWAP	//  mode _16 body
    STSLICER	//  mode _17
    ENDC	//  mode _18
    SWAP	//  _18 mode
    SENDRAWMSG
  }>
  mode::forward_value PROCINLINE:<{
    // 
    64 PUSHINT	//  _0=64
  }>
  mode::pay_transfer PROCINLINE:<{
    // 
    1 PUSHINT	//  _0=1
  }>
  mode::destroy_into PROCINLINE:<{
    // 
    7 PUSHPOW2	//  _1=128
  }>
  job::ld_tag PROCINLINE:<{
    //  v
    2 LDU	//  _4 _3
    SWAP	//  _3 _4
  }>
  job::ld_unlocked PROCINLINE:<{
    //  v
    LDMSGADDR	//  _1 v
    64 LDU	//  _1 _3 v
    LDREF	//  _1 _3 _6 v
  }>
  offer::ld_tag PROCINLINE:<{
    //  v
    2 LDU	//  _4 _3
    SWAP	//  _3 _4
  }>
  offer::ld_unlocked PROCINLINE:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
    256 LDSLICE	//  _1 _3 _5 _8 _10 v
    160 PLDU	//  _1 _3 _5 _8 _10 _14
  }>
  job::ld_msg_lock_on PROCINLINE:<{
    //  v
    LDREF	//  _1 v
  }>
  job::st_msg_collapse PROCINLINE:<{
    //  v add_args
    DROP	//  v
    c4 PUSH	//  v _3
    HASHCU	//  v order_hash
    160 PUSHPOW2DEC	//  v order_hash _9
    AND	//  v order_hash
    177 PUSHINT
    ROT	//  order_hash _12=177 v
    32 STU	//  order_hash v
    160 STU	//  v
  }>
  job::st_locked PROCINLINE:<{
    //  v offer unlocked
    -ROT	//  unlocked v offer
    STSLICER	//  unlocked v
    SWAP	//  v unlocked
    STSLICER	//  v
  }>
  job::ld_locked PROCINLINE:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
  }>
  offer::ld_msg_collapse PROCINLINE:<{
    //  v
    160 PLDU	//  _2
  }>
  offer::st_msg_take_stake PROCINLINE:<{
    //  v stake
    1886156135 PUSHINT
    ROT	//  stake _3=1886156135 v
    32 STU	//  stake v
    LTIME	//  stake v _7
    SWAP	//  stake _7 v
    64 STU	//  stake v
    STGRAMS	//  v
    0 PUSHINT	//  v _13=0
    SWAP	//  _13=0 v
    1 STU	//  v
  }>
  offer::st_locked PROCINLINE:<{
    //  v unlocked
    STSLICER	//  v
  }>
  offer::ld_locked PROCINLINE:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
    256 LDSLICE	//  _1 _3 _5 _8 _10 v
  }>
  offer::st_msg_unplug PROCINLINE:<{
    //  v
    1685288050 PUSHINT	//  v _3=1685288050
    SWAP	//  _3=1685288050 v
    32 STU	//  v
    LTIME	//  v _7
    SWAP	//  _7 v
    64 STU	//  v
  }>
  offer::st_msg_lock_success PROCINLINE:<{
    //  v add_args
    UNTRIPLE	//  v worker desc worker_key
    173 PUSHINT	//  v worker desc worker_key _7=173
    s0 s4 XCHG2	//  worker_key worker desc _7=173 v
    32 STU	//  worker_key worker desc v
    ROT	//  worker_key desc v worker
    STSLICER	//  worker_key desc v
    SWAP	//  worker_key v desc
    STREFR	//  worker_key v
    SWAP	//  v worker_key
    STSLICER	//  v
  }>
  job::ld_msg_lock_success PROCINLINE:<{
    //  v
    LDMSGADDR	//  _1 v
    LDREF	//  _1 _3 v
  }>
  offer::st_msg_lock_failed PROCINLINE:<{
    //  v add_args
    DROP	//  v
    212 PUSHINT	//  v _3=212
    SWAP	//  _3=212 v
    32 STU	//  v
  }>
  offer::st_unlocked PROCINLINE:<{
    //  v job worker stake desc worker_key short_job_hash
    s6 s5 XCHG2	//  worker_key short_job_hash worker stake desc v job
    STSLICER	//  worker_key short_job_hash worker stake desc v
    s0 s3 XCHG2	//  worker_key short_job_hash desc stake v worker
    STSLICER	//  worker_key short_job_hash desc stake v
    64 STU	//  worker_key short_job_hash desc v
    SWAP	//  worker_key short_job_hash v desc
    STREFR	//  worker_key short_job_hash v
    ROT	//  short_job_hash v worker_key
    STSLICER	//  short_job_hash v
    160 STU	//  v
  }>
  job::st_unlocked PROCINLINE:<{
    //  v locked_without_offer
    STSLICER	//  v
  }>
  job::st_working PROCINLINE:<{
    //  v poster worker value poster_desc worker_desc poster_key worker_key
    s7 s6 XCHG2	//  poster_key worker_key worker value poster_desc worker_desc v poster
    STSLICER	//  poster_key worker_key worker value poster_desc worker_desc v
    s0 s4 XCHG2	//  poster_key worker_key worker_desc value poster_desc v worker
    STSLICER	//  poster_key worker_key worker_desc value poster_desc v
    s1 s2 XCHG	//  poster_key worker_key worker_desc poster_desc value v
    64 STU	//  poster_key worker_key worker_desc poster_desc v
    SWAP	//  poster_key worker_key worker_desc v poster_desc
    STREFR	//  poster_key worker_key worker_desc v
    SWAP	//  poster_key worker_key v worker_desc
    STREFR	//  poster_key worker_key v
    NEWC	//  poster_key worker_key v _20
    s0 s3 XCHG2	//  v worker_key _20 poster_key
    STSLICER	//  v worker_key _21
    SWAP	//  v _21 worker_key
    STSLICER	//  v _22
    x{233AD31DA6B7979BA0DC8E4C4FB944639EF447B6ACAD5071BFB466E88FF6F6FB} PUSHSLICE	//  v _22 _23
    STSLICER	//  v _24
    ENDC	//  v _25
    STREFR	//  v
  }>
  job::ld_working_main PROCINLINE:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    2 PUSHINT	//  _1 _3 v _5=2
    PLDREFVAR	//  _1 _3 _6
  }>
  job::wrap_for_signing PROCINLINE:<{
    //  worker_ton_min worker_ton_max
    0 PUSHINT	//  worker_ton_min worker_ton_max _2=0
    NEWC	//  worker_ton_min worker_ton_max _2=0 _3
    x{FFFF726C3A3A6A6F623A3A7630} PUSHSLICE	//  worker_ton_min worker_ton_max _2=0 _3 _4
    STSLICER	//  worker_ton_min worker_ton_max _2=0 _5
    5 STU	//  worker_ton_min worker_ton_max _7
    MYADDR	//  worker_ton_min worker_ton_max _7 _8
    STSLICER	//  worker_ton_min worker_ton_max _9
    s1 s2 XCHG	//  worker_ton_max worker_ton_min _9
    64 STU	//  worker_ton_max _11
    64 STU	//  _13
    ENDC	//  _14
    CTOS	//  _15
  }>
  job::parse_proposal_with_tag PROCINLINE:<{
    //  v
    2 LDU	//  tag v
    OVER	//  tag v tag
    3 EQINT	//  tag v _6
    IF:<{	//  tag v
      2DROP	// 
      1652841508 PUSHINT	//  _8=1652841508
      CONFIGOPTPARAM	//  c
      DUP	//  c c
      ISNULL	//  c _11
      200 THROWIF
      MYADDR	//  c _14
      SWAP
      267 PUSHINT	//  _14 c _15=267
      DICTGET
      NULLSWAPIFNOT	//  v success
      200 THROWIFNOT
      3 PUSHINT	//  v _19=3
      PUSHNULL	//  v _19=3 _20
      s0 s2 XCHG	//  _20 _19=3 v
      64 LDU	//  _20 _19=3 _21 v
      64 LDU	//  _20 _19=3 _21 _43 _42
      DROP	//  _20 _19=3 _21 _24
      s2 s3 XCHG	//  _19=3 _20 _21 _24
    }>ELSE<{	//  tag v
      9 PUSHPOW2	//  tag v _28=512
      LDSLICEX	//  tag _27 v
      64 LDU	//  tag _27 _30 v
      64 LDU	//  tag _27 _30 _49 _48
      DROP	//  tag _27 _30 _33
    }>
  }>
  job::parse_finish_message PROCINLINE:<{
    //  v
    LDREF	//  _1 v
    SWAP	//  v _1
    CTOS	//  v _3
    SWAP	//  _3 v
    PLDREF	//  _3 _4
    CTOS	//  _3 _5
  }>
  recv_internal PROC:<{
    //  in_msg in_msg_body
    DUP	//  in_msg in_msg_body in_msg_body
    SBITS	//  in_msg in_msg_body _2
    32 LESSINT	//  in_msg in_msg_body _4
    IFRETALT
    SWAP	//  in_msg_body in_msg
    load_bounced_sender INLINECALLDICT	//  in_msg_body bounced sender
    s0 s2 XCHG	//  sender bounced in_msg_body
    32 LDU	//  sender bounced op in_msg_body
    c4 PUSH	//  sender bounced op in_msg_body _14
    CTOS	//  sender bounced op in_msg_body own_data
    2 LDU	//  sender bounced op in_msg_body tag own_data
    OVER	//  sender bounced op in_msg_body tag own_data tag
    0 EQINT	//  sender bounced op in_msg_body tag own_data _21
    IF:<{	//  sender bounced op in_msg_body tag own_data
      NIP
      s3 POP	//  sender own_data op in_msg_body
      s2 PUSH	//  sender own_data op in_msg_body own_data
      offer::ld_unlocked INLINECALLDICT	//  sender own_data op in_msg_body _108 _109 _110 _111 _112 _113
      2 1 BLKDROP2	//  sender own_data op in_msg_body job worker stake job_hash
      s5 PUSH
      1685288050 PUSHINT	//  sender own_data op in_msg_body job worker stake job_hash op _29=1685288050
      EQUAL	//  sender own_data op in_msg_body job worker stake job_hash _30
      IF:<{	//  sender own_data op in_msg_body job worker stake job_hash
        s2 s6 XCHG
        6 BLKDROP	//  sender worker
        OVER	//  sender worker sender
        SDEQ	//  sender _32
        200 THROWIFNOT
        mode::destroy_into INLINECALLDICT	//  sender _34
        SWAP
        0 PUSHINT
        x{4f66666572207265766f6b65642e} PUSHSLICE	//  _34 sender _35=0 _36
        send_text INLINECALLDICT
        RETALT
      }>ELSE<{	//  sender own_data op in_msg_body job worker stake job_hash
        s0 s5 XCHG
        177 PUSHINT	//  sender own_data job_hash in_msg_body job worker stake op _39=177
        EQUAL	//  sender own_data job_hash in_msg_body job worker stake _40
        IF:<{	//  sender own_data job_hash in_msg_body job worker stake
          s2 s6 XCHG2	//  stake own_data job_hash in_msg_body worker job sender
          SDEQ	//  stake own_data job_hash in_msg_body worker _42
          200 THROWIFNOT
          SWAP	//  stake own_data job_hash worker in_msg_body
          offer::ld_msg_collapse INLINECALLDICT	//  stake own_data job_hash worker _45
          ROT	//  stake own_data worker _45 job_hash
          EQUAL	//  stake own_data worker _46
          200 THROWIFNOT
          mode::forward_value INLINECALLDICT	//  stake own_data worker _48
          TRUE	//  stake own_data worker _48 _49
          0 PUSHINT	//  stake own_data worker _48 _49 _50=0
          CONT:<{
            offer::st_msg_take_stake CALLDICT
          }>	//  stake own_data worker _48 _49 _50=0 _51
          s3 s5 XCHG
          s1 s4 s0 XCHG3
          s1 s3 XCHG
          s1 s6 XCHG	//  own_data _48 _49 worker _50=0 stake _51
          send_to_rbounceable INLINECALLDICT
          1 PUSHINT	//  own_data _53=1
          NEWC	//  own_data _53=1 _54
          2 STU	//  own_data _56
          SWAP	//  _56 own_data
          offer::st_locked INLINECALLDICT	//  _57
          ENDC	//  _58
          c4 POP
          RETALT
        }>ELSE<{
          7 BLKDROP	// 
        }>
      }>
    }>ELSE<{	//  sender bounced op in_msg_body tag own_data
      s2 POP	//  sender bounced op own_data tag
      1 EQINT	//  sender bounced op own_data _62
      IF:<{	//  sender bounced op own_data
        LDMSGADDR	//  sender bounced op job own_data
        LDMSGADDR	//  sender bounced op job worker own_data
        s1 s5 PUXC	//  own_data bounced op job worker worker sender
        SDEQ	//  own_data bounced op job worker _70
        200 THROWIFNOT
        s0 s3 XCHG	//  own_data worker op job bounced
        IF:<{	//  own_data worker op job
          2 1 BLKDROP2	//  own_data job
          mode::forward_value INLINECALLDICT	//  own_data job _72
          0 PUSHINT	//  own_data job _72 _73=0
          PUSHNULL	//  own_data job _72 _73=0 _74
          CONT:<{
            offer::st_msg_lock_failed CALLDICT
          }>	//  own_data job _72 _73=0 _74 _75
          s3 s4 XCHG	//  own_data _72 job _73=0 _74 _75
          send_to INLINECALLDICT
          0 PUSHINT	//  own_data _77=0
          NEWC	//  own_data _77=0 _78
          2 STU	//  own_data _80
          SWAP	//  _80 own_data
          STSLICER	//  _81
          ENDC	//  _82
          c4 POP
          RETALT
        }>ELSE<{	//  own_data worker op job
          SWAP
          4033639783 PUSHINT	//  own_data worker job op _85=4033639783
          EQUAL	//  own_data worker job _86
          IF:<{	//  own_data worker job
            s0 s2 XCHG
            64 PUSHINT	//  job worker own_data _88=64
            SDSKIPFIRST	//  job worker own_data
            mode::destroy_into INLINECALLDICT	//  job worker own_data _90
            0 PUSHINT	//  job worker own_data _90 _91=0
            s2 PUSH	//  job worker own_data _90 _91=0 own_data
            PLDREF	//  job worker own_data _90 _91=0 _92
            s0 s3 XCHG	//  job worker _92 _90 _91=0 own_data
            256 LDSLICE	//  job worker _92 _90 _91=0 _119 _118
            DROP	//  job worker _92 _90 _91=0 _93
            s4 s3 s0 XCHG3	//  job _90 _91=0 worker _92 _93
            TRIPLE	//  job _90 _91=0 _96
            CONT:<{
              offer::st_msg_lock_success CALLDICT
            }>	//  job _90 _91=0 _96 _97
            s3 s4 XCHG	//  _90 job _91=0 _96 _97
            send_to INLINECALLDICT
            RETALT
          }>ELSE<{
            3 BLKDROP	// 
          }>
        }>
      }>ELSE<{
        4 BLKDROP	// 
      }>
    }>
    16 PUSHPOW2DEC	//  _100=65535
    THROWANY
  }>
}END>c

boc>B "build/boc/contract-offer.boc" B>file