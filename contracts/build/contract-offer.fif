"Asm.fif" include
// automatically generated from `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\error_codes.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\math.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\stdlib.func` `D:\TON_FunC\ratelance\contracts\func\offer-contract.fc` incl:`func/stdlib-ext.fc` incl:`func/opcodes.fc` incl:`func/tlb.fc` 
PROGRAM{
  DECLPROC power
  DECLPROC sqrt
  DECLPROC avg
  DECLPROC exp
  DECLPROC log2
  DECLPROC send_to
  DECLPROC mode::forward_value
  DECLPROC mode::destroy_into
  DECLPROC job::ld_tag
  DECLPROC job::ld_unlocked
  DECLPROC offer::ld_tag
  DECLPROC offer::ld_unlocked
  DECLPROC job::ld_msg_lock_on
  DECLPROC job::st_msg_collapse
  DECLPROC job::st_locked
  DECLPROC offer::ld_msg_collapse
  DECLPROC offer::st_msg_take_stake
  DECLPROC offer::st_locked
  DECLPROC offer::ld_locked
  DECLPROC offer::st_msg_unplug
  DECLPROC offer::st_msg_lock_success
  DECLPROC job::ld_msg_lock_success
  DECLPROC offer::st_msg_lock_failed
  DECLPROC offer::st_unlocked
  DECLPROC job::st_unlocked
  DECLPROC job::st_working
  DECLPROC job::wrap_for_signing
  DECLPROC job::parse_proposal_with_tag
  DECLPROC job::parse_finish_message
  DECLPROC recv_internal
  DECLPROC recv_external
  power PROCREF:<{
    //  x exponent
    OVER	//  x exponent x
    0 EQINT	//  x exponent _3
    IFJMP:<{	//  x exponent
      2DROP	// 
      0 PUSHINT	//  _4=0
    }>	//  x exponent
    DUP	//  x exponent exponent
    0 EQINT	//  x exponent _6
    IFJMP:<{	//  x exponent
      2DROP	// 
      1 PUSHINT	//  _7=1
    }>	//  x exponent
    OVER	//  x counter result
    WHILE:<{
      OVER	//  x counter result counter
      1 GTINT	//  x counter result _11
    }>DO<{	//  x counter result
      s2 PUSH	//  x counter result x
      MUL	//  x counter result
      SWAP	//  x result counter
      DEC	//  x result counter
      SWAP	//  x counter result
    }>	//  x counter result
    2 1 BLKDROP2	//  result
  }>
  sqrt PROCREF:<{
    //  x
    DUP	//  x x
    0 EQINT	//  x _2
    IFJMP:<{	//  x
      DROP	// 
      0 PUSHINT	//  _3=0
    }>	//  x
    DUP	//  x x
    4 LESSINT	//  x _5
    IFJMP:<{	//  x
      DROP	// 
      1 PUSHINT	//  _6=1
    }>	//  x
    DUP	//  x x
    INC	//  x _9
    1 RSHIFT#	//  x z
    OVER	//  x z y
    WHILE:<{
      2DUP	//  x z y z y
      LESS	//  x z y _13
    }>DO<{	//  x z y
      DROP	//  x z
      s0 s1 s0 PUSH3	//  x z y x z
      DIV	//  x z y _14
      ROT	//  x y _14 z
      ADD	//  x y _15
      1 RSHIFT#	//  x y z
      SWAP	//  x z y
    }>	//  x z y
    2 1 BLKDROP2	//  y
  }>
  avg PROCREF:<{
    //  x y
    ADD	//  _2
    1 RSHIFT#	//  _4
  }>
  exp PROCREF:<{
    //  x
    DUP	//  x x
    -1 GTINT	//  x _2
    IF:<{	//  x
      POW2	//  _3
    }>ELSE<{	//  x
      1 PUSHINT	//  x _6=1
      SWAP	//  _6=1 x
      NEGATE	//  _6=1 _8
      RSHIFT	//  _3
    }>
  }>
  log2 PROCREF:<{
    //  x
    0 PUSHINT	//  x n=0
    7 PUSHPOW2	//  x n=0 _3=128
    exp INLINECALLDICT	//  x n=0 _4
    s2 s(-1) PUXC	//  x n=0 x _4
    GEQ	//  x n=0 _5
    IF:<{	//  x n=0
      DROP	//  x
      128 RSHIFT#	//  x
      7 PUSHPOW2	//  x n
    }>	//  x n
    64 PUSHINT	//  x n _10=64
    exp INLINECALLDICT	//  x n _11
    s2 s(-1) PUXC	//  x n x _11
    GEQ	//  x n _12
    IF:<{	//  x n
      SWAP	//  n x
      64 RSHIFT#	//  n x
      SWAP	//  x n
      64 ADDCONST	//  x n
    }>	//  x n
    32 PUSHINT	//  x n _17=32
    exp INLINECALLDICT	//  x n _18
    s2 s(-1) PUXC	//  x n x _18
    GEQ	//  x n _19
    IF:<{	//  x n
      SWAP	//  n x
      32 RSHIFT#	//  n x
      SWAP	//  x n
      32 ADDCONST	//  x n
    }>	//  x n
    16 PUSHINT	//  x n _24=16
    exp INLINECALLDICT	//  x n _25
    s2 s(-1) PUXC	//  x n x _25
    GEQ	//  x n _26
    IF:<{	//  x n
      SWAP	//  n x
      16 RSHIFT#	//  n x
      SWAP	//  x n
      16 ADDCONST	//  x n
    }>	//  x n
    8 PUSHINT	//  x n _31=8
    exp INLINECALLDICT	//  x n _32
    s2 s(-1) PUXC	//  x n x _32
    GEQ	//  x n _33
    IF:<{	//  x n
      SWAP	//  n x
      8 RSHIFT#	//  n x
      SWAP	//  x n
      8 ADDCONST	//  x n
    }>	//  x n
    4 PUSHINT	//  x n _38=4
    exp INLINECALLDICT	//  x n _39
    s2 s(-1) PUXC	//  x n x _39
    GEQ	//  x n _40
    IF:<{	//  x n
      SWAP	//  n x
      4 RSHIFT#	//  n x
      SWAP	//  x n
      4 ADDCONST	//  x n
    }>	//  x n
    2 PUSHINT	//  x n _45=2
    exp INLINECALLDICT	//  x n _46
    s2 s(-1) PUXC	//  x n x _46
    GEQ	//  x n _47
    IF:<{	//  x n
      SWAP	//  n x
      2 RSHIFT#	//  n x
      SWAP	//  x n
      2 ADDCONST	//  x n
    }>	//  x n
    1 PUSHINT	//  x n _52=1
    exp INLINECALLDICT	//  x n _53
    s1 s2 XCHG	//  n x _53
    GEQ	//  n _54
    IF:<{	//  n
      INC	//  n
    }>	//  n
  }>
  send_to PROCREF:<{
    //  packed_mode dest value a m
    //  mode dest value a m
    NEWC	//  mode dest value a m _7
    -ROT	//  mode dest value _7 a m
    2 1 CALLXARGS	//  mode dest value _8
    ENDC	//  mode dest value _9
    0 PUSHINT	//  mode dest value _9 _10=0
    24 PUSHINT	//  mode dest value _9 _10=0 _11=24
    NEWC	//  mode dest value _9 _10=0 _11=24 _12
    6 STU	//  mode dest value _9 _10=0 _14
    s0 s4 XCHG2	//  mode _10=0 value _9 _14 dest
    STSLICER	//  mode _10=0 value _9 _15
    ROT	//  mode _10=0 _9 _15 value
    STVARUINT16	//  mode _10=0 _9 _16
    s1 s2 XCHG	//  mode _9 _10=0 _16
    107 STU	//  mode _9 _18
    STREF	//  mode _19
    ENDC	//  mode _20
    SWAP	//  _20 mode
    SENDRAWMSG
  }>
  mode::forward_value PROC:<{
    // 
    64 PUSHINT	//  _0=64
  }>
  mode::destroy_into PROC:<{
    // 
    7 PUSHPOW2	//  _1=128
  }>
  job::ld_tag PROCREF:<{
    //  v
    2 LDU	//  _4 _3
    SWAP	//  _3 _4
  }>
  job::ld_unlocked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    64 LDU	//  _1 _3 v
    LDREF	//  _1 _3 _6 v
  }>
  offer::ld_tag PROCREF:<{
    //  v
    2 LDU	//  _4 _3
    SWAP	//  _3 _4
  }>
  offer::ld_unlocked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
    256 LDSLICE	//  _1 _3 _5 _8 _10 v
  }>
  job::ld_msg_lock_on PROCREF:<{
    //  v
    LDREF	//  _4 _3
    DROP	//  _1
  }>
  job::st_msg_collapse PROCREF:<{
    //  v
    c4 PUSH	//  v _3
    HASHCU	//  v order_hash
    160 PUSHPOW2DEC	//  v order_hash _9
    AND	//  v order_hash
    177 PUSHINT
    ROT	//  order_hash _12=177 v
    32 STU	//  order_hash v
    160 STU	//  v
  }>
  job::st_locked PROCREF:<{
    //  v offer poster value desc poster_key
    s5 s4 XCHG2	//  desc poster_key poster value v offer
    STSLICER	//  desc poster_key poster value v
    ROT	//  desc poster_key value v poster
    STSLICER	//  desc poster_key value v
    64 STU	//  desc poster_key v
    ROT	//  poster_key v desc
    STREFR	//  poster_key v
    SWAP	//  v poster_key
    STSLICER	//  v
  }>
  offer::ld_msg_collapse PROCREF:<{
    //  v
    160 PLDU	//  _2
  }>
  offer::st_msg_take_stake PROCREF:<{
    //  v stake
    1886156135 PUSHINT
    ROT	//  stake _3=1886156135 v
    32 STU	//  stake v
    LTIME	//  stake v _7
    SWAP	//  stake _7 v
    64 STU	//  stake v
    STGRAMS	//  v
    0 PUSHINT	//  v _13=0
    SWAP	//  _13=0 v
    1 STU	//  v
  }>
  offer::st_locked PROCREF:<{
    //  v unlocked
    STSLICER	//  v
  }>
  offer::ld_locked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
    256 LDSLICE	//  _1 _3 _5 _8 _10 v
  }>
  offer::st_msg_unplug PROCREF:<{
    //  v
    1685288050 PUSHINT	//  v _3=1685288050
    SWAP	//  _3=1685288050 v
    32 STU	//  v
    LTIME	//  v _7
    SWAP	//  _7 v
    64 STU	//  v
  }>
  offer::st_msg_lock_success PROCREF:<{
    //  v add_args add_args add_args
    //  v worker desc worker_key
    173 PUSHINT	//  v worker desc worker_key _6=173
    s0 s4 XCHG2	//  worker_key worker desc _6=173 v
    32 STU	//  worker_key worker desc v
    ROT	//  worker_key desc v worker
    STSLICER	//  worker_key desc v
    SWAP	//  worker_key v desc
    STREFR	//  worker_key v
    SWAP	//  v worker_key
    STSLICER	//  v
  }>
  job::ld_msg_lock_success PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDREF	//  _1 _3 v
  }>
  offer::st_msg_lock_failed PROCREF:<{
    //  v
    212 PUSHINT	//  v _3=212
    SWAP	//  _3=212 v
    32 STU	//  v
  }>
  offer::st_unlocked PROCREF:<{
    //  v job worker stake desc worker_key short_job_hash
    s6 s5 XCHG2	//  worker_key short_job_hash worker stake desc v job
    STSLICER	//  worker_key short_job_hash worker stake desc v
    s0 s3 XCHG2	//  worker_key short_job_hash desc stake v worker
    STSLICER	//  worker_key short_job_hash desc stake v
    64 STU	//  worker_key short_job_hash desc v
    SWAP	//  worker_key short_job_hash v desc
    STREFR	//  worker_key short_job_hash v
    ROT	//  short_job_hash v worker_key
    STSLICER	//  short_job_hash v
    160 STU	//  v
  }>
  job::st_unlocked PROCREF:<{
    //  v poster value desc poster_key
    s4 s3 XCHG2	//  desc poster_key value v poster
    STSLICER	//  desc poster_key value v
    64 STU	//  desc poster_key v
    ROT	//  poster_key v desc
    STREFR	//  poster_key v
    SWAP	//  v poster_key
    STSLICER	//  v
  }>
  job::st_working PROCREF:<{
    //  v poster worker value poster_desc worker_desc poster_key worker_key
    s7 s6 XCHG2	//  poster_key worker_key worker value poster_desc worker_desc v poster
    STSLICER	//  poster_key worker_key worker value poster_desc worker_desc v
    s0 s4 XCHG2	//  poster_key worker_key worker_desc value poster_desc v worker
    STSLICER	//  poster_key worker_key worker_desc value poster_desc v
    s1 s2 XCHG	//  poster_key worker_key worker_desc poster_desc value v
    64 STU	//  poster_key worker_key worker_desc poster_desc v
    SWAP	//  poster_key worker_key worker_desc v poster_desc
    STREFR	//  poster_key worker_key worker_desc v
    SWAP	//  poster_key worker_key v worker_desc
    STREFR	//  poster_key worker_key v
    NEWC	//  poster_key worker_key v _20
    s0 s3 XCHG2	//  v worker_key _20 poster_key
    STSLICER	//  v worker_key _21
    SWAP	//  v _21 worker_key
    STSLICER	//  v _22
    x{233AD31DA6B7979BA0DC8E4C4FB944639EF447B6ACAD5071BFB466E88FF6F6FB} PUSHSLICE	//  v _22 _23
    STSLICER	//  v _24
    ENDC	//  v _25
    STREFR	//  v
  }>
  job::wrap_for_signing PROCREF:<{
    //  worker_ton_min worker_ton_max
    NEWC	//  worker_ton_min worker_ton_max _2
    x{FFFF726C3A3A6A6F623A3A7630} PUSHSLICE	//  worker_ton_min worker_ton_max _2 _3
    STSLICER	//  worker_ton_min worker_ton_max _4
    s1 s2 XCHG	//  worker_ton_max worker_ton_min _4
    64 STU	//  worker_ton_max _6
    64 STU	//  _8
    ENDC	//  _9
    CTOS	//  _10
  }>
  job::parse_proposal_with_tag PROCREF:<{
    //  v
    2 LDU	//  tag v
    OVER	//  tag v tag
    3 EQINT	//  tag v _6
    IFJMP:<{	//  tag v
      2DROP	// 
      1652841508 PUSHINT	//  _8=1652841508
      CONFIGOPTPARAM	//  c
      DUP	//  c c
      ISNULL	//  c _11
      200 THROWIF
      MYADDR	//  c _14
      SWAP
      267 PUSHINT	//  _14 c _15=267
      DICTGET
      NULLSWAPIFNOT	//  v success
      200 THROWIFNOT
      3 PUSHINT	//  v _19=3
      PUSHNULL	//  v _19=3 _20
      s0 s2 XCHG	//  _20 _19=3 v
      64 LDU	//  _20 _19=3 _21 v
      64 LDU	//  _20 _19=3 _21 _43 _42
      DROP	//  _20 _19=3 _21 _24
      s2 s3 XCHG	//  _19=3 _20 _21 _24
    }>	//  tag v
    9 PUSHPOW2	//  tag v _28=512
    LDSLICEX	//  tag _27 v
    64 LDU	//  tag _27 _30 v
    64 LDU	//  tag _27 _30 _49 _48
    DROP	//  tag _27 _30 _33
  }>
  job::parse_finish_message PROCREF:<{
    //  v
    LDREF	//  _1 v
    SWAP	//  v _1
    CTOS	//  v _3
    SWAP	//  _3 v
    PLDREF	//  _3 _4
    CTOS	//  _3 _5
  }>
  recv_internal PROC:<{
    //  in_msg_full in_msg
    SWAP	//  in_msg in_msg_full
    CTOS	//  in_msg in_msg_full
    4 LDU	//  in_msg _5 in_msg_full
    SWAP
    2 PUSHINT	//  in_msg in_msg_full _5 _8=2
    AND	//  in_msg in_msg_full bounceable
    SWAP	//  in_msg bounceable in_msg_full
    LDMSGADDR	//  in_msg bounceable _106 _105
    DROP	//  in_msg bounceable sender
    x{8016543D9EAA8BC0ED9A6D5CA2DD4FD7BE655D401195457095F30CD7D9641112B5B_} PUSHSLICE	//  in_msg bounceable sender _13
    SDEQ	//  in_msg bounceable _14
    IFNOTJMP:<{	//  in_msg bounceable
      NIP	//  bounceable
      IF:<{	// 
        100 THROW
      }>ELSE<{	// 
        3576854235 PUSHINT	//  _17=3576854235
        16 PUSHINT	//  _17=3576854235 _18=16
        NEWC	//  _17=3576854235 _18=16 _19
        6 STU	//  _17=3576854235 _21
        x{8016543D9EAA8BC0ED9A6D5CA2DD4FD7BE655D401195457095F30CD7D9641112B5B_} PUSHSLICE	//  _17=3576854235 _21 _22
        STSLICER	//  _17=3576854235 _23
        143 STU	//  _29
        ENDC	//  _30
        64 PUSHINT	//  _30 _31=64
        SENDRAWMSG
      }>
    }>	//  in_msg bounceable
    DROP	//  in_msg
    32 PLDUZ	//  _107 _108
    NIP	//  opcode
    DUP
    4033639783 PUSHINT	//  opcode opcode _38
    EQUAL	//  opcode _39
    IF:<{	//  opcode
      DROP	// 
      LTIME	//  _40
      1685288050 PUSHINT	//  _40 _41=1685288050
      16 PUSHINT	//  _40 _41=1685288050 _42=16
      NEWC	//  _40 _41=1685288050 _42=16 _43
      6 STU	//  _40 _41=1685288050 _45
      x{8016543D9EAA8BC0ED9A6D5CA2DD4FD7BE655D401195457095F30CD7D9641112B5B_} PUSHSLICE	//  _40 _41=1685288050 _45 _46
      STSLICER	//  _40 _41=1685288050 _47
      100000000 PUSHINT	//  _40 _41=1685288050 _47 _48=100000000
      STVARUINT16	//  _40 _41=1685288050 _49
      139 STU	//  _40 _53
      64 STU	//  _55
      ENDC	//  _56
      1 PUSHINT	//  _56 _57=1
      SENDRAWMSG
      0 PUSHINT	//  _59=0
      16 PUSHINT	//  _59=0 _60=16
      NEWC	//  _59=0 _60=16 _61
      6 STU	//  _59=0 _63
      x{8016543D9EAA8BC0ED9A6D5CA2DD4FD7BE655D401195457095F30CD7D9641112B5B_} PUSHSLICE	//  _59=0 _63 _64
      STSLICER	//  _59=0 _65
      143 STU	//  _71
      x{537562736372697074696f6e20776f726b73} PUSHSLICE	//  _71 _72
      STSLICER	//  _73
      ENDC	//  _74
      160 PUSHINT	//  _74 _77
      SENDRAWMSG
    }>ELSE<{	//  opcode
      DUP
      1685288050 PUSHINT	//  opcode opcode _79=1685288050
      EQUAL	//  opcode _80
      IF:<{	//  opcode
        DROP	// 
        0 PUSHINT	//  _81=0
        16 PUSHINT	//  _81=0 _82=16
        NEWC	//  _81=0 _82=16 _83
        6 STU	//  _81=0 _85
        x{8016543D9EAA8BC0ED9A6D5CA2DD4FD7BE655D401195457095F30CD7D9641112B5B_} PUSHSLICE	//  _81=0 _85 _86
        STSLICER	//  _81=0 _87
        143 STU	//  _93
        ENDC	//  _94
        160 PUSHINT	//  _94 _97
        SENDRAWMSG
      }>ELSE<{	//  opcode
        32 PUSHPOW2DEC	//  opcode _99=4294967295
        EQUAL	//  _100
        IF:<{	// 
          b{}  s>c PUSHREF	//  _101
          c4 POP
        }>	// 
      }>
    }>
  }>
  recv_external PROC:<{
    // 
    c4 PUSH	//  _0
    CTOS	//  _1
    SBITS	//  _2
    IFJMP:<{	// 
    }>	// 
    b{1} s>c PUSHREF	//  _3
    c4 POP
    COMMIT
    ACCEPT
    0 PUSHINT	//  _7=0
    LTIME	//  _7=0 _8
    1886156135 PUSHINT	//  _7=0 _8 _9=1886156135
    24 PUSHINT	//  _7=0 _8 _9=1886156135 _10=24
    NEWC	//  _7=0 _8 _9=1886156135 _10=24 _11
    6 STU	//  _7=0 _8 _9=1886156135 _13
    x{8016543D9EAA8BC0ED9A6D5CA2DD4FD7BE655D401195457095F30CD7D9641112B5B_} PUSHSLICE	//  _7=0 _8 _9=1886156135 _13 _14
    STSLICER	//  _7=0 _8 _9=1886156135 _15
    100000000 PUSHINT	//  _7=0 _8 _9=1886156135 _15 _16=100000000
    STVARUINT16	//  _7=0 _8 _9=1886156135 _17
    139 STU	//  _7=0 _8 _21
    64 STU	//  _7=0 _23
    500000000 PUSHINT	//  _7=0 _23 _24=500000000
    STVARUINT16	//  _7=0 _25
    1 STU	//  _27
    ENDC	//  _28
    3 PUSHINT	//  _28 _29=3
    SENDRAWMSG
  }>
}END>c
