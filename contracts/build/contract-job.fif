"Asm.fif" include
// automatically generated from `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\error_codes.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\math.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\stdlib.func` `D:\TON_FunC\ratelance\contracts\func\job-contract.fc` incl:`func/stdlib-ext.fc` incl:`func/opcodes.fc` incl:`func/tlb.fc` 
PROGRAM{
  DECLPROC power
  DECLPROC sqrt
  DECLPROC avg
  DECLPROC exp
  DECLPROC log2
  DECLPROC load_bounced_sender
  DECLPROC load_flags_sender
  DECLPROC send_to_rbounceable
  DECLPROC send_to
  DECLPROC send_text
  DECLPROC mode::forward_value
  DECLPROC mode::pay_transfer
  DECLPROC mode::destroy_into
  DECLPROC job::ld_tag
  DECLPROC job::ld_unlocked
  DECLPROC offer::ld_tag
  DECLPROC offer::ld_unlocked
  DECLPROC job::ld_msg_lock_on
  DECLPROC job::st_msg_collapse
  DECLPROC job::st_locked
  DECLPROC job::ld_locked
  DECLPROC offer::ld_msg_collapse
  DECLPROC offer::st_msg_take_stake
  DECLPROC offer::st_locked
  DECLPROC offer::ld_locked
  DECLPROC offer::st_msg_unplug
  DECLPROC offer::st_msg_lock_success
  DECLPROC job::ld_msg_lock_success
  DECLPROC offer::st_msg_lock_failed
  DECLPROC offer::st_unlocked
  DECLPROC job::st_unlocked
  DECLPROC job::st_working
  DECLPROC job::ld_working_main
  DECLPROC job::wrap_for_signing
  DECLPROC job::parse_proposal_with_tag
  DECLPROC job::parse_finish_message
  DECLPROC parse_proposal_check_sig
  86181 DECLMETHOD get_job_state
  119917 DECLMETHOD waiting_message_from
  110208 DECLMETHOD get_job_description
  107888 DECLMETHOD get_job_value
  94634 DECLMETHOD get_job_poster
  DECLPROC recv_internal
  power PROCREF:<{
    //  x exponent
    OVER	//  x exponent x
    0 EQINT	//  x exponent _3
    IFJMP:<{	//  x exponent
      2DROP	// 
      0 PUSHINT	//  _4=0
    }>	//  x exponent
    DUP	//  x exponent exponent
    0 EQINT	//  x exponent _6
    IFJMP:<{	//  x exponent
      2DROP	// 
      1 PUSHINT	//  _7=1
    }>	//  x exponent
    OVER	//  x counter result
    WHILE:<{
      OVER	//  x counter result counter
      1 GTINT	//  x counter result _11
    }>DO<{	//  x counter result
      s2 PUSH	//  x counter result x
      MUL	//  x counter result
      SWAP	//  x result counter
      DEC	//  x result counter
      SWAP	//  x counter result
    }>	//  x counter result
    2 1 BLKDROP2	//  result
  }>
  sqrt PROCREF:<{
    //  x
    DUP	//  x x
    0 EQINT	//  x _2
    IFJMP:<{	//  x
      DROP	// 
      0 PUSHINT	//  _3=0
    }>	//  x
    DUP	//  x x
    4 LESSINT	//  x _5
    IFJMP:<{	//  x
      DROP	// 
      1 PUSHINT	//  _6=1
    }>	//  x
    DUP	//  x x
    INC	//  x _9
    1 RSHIFT#	//  x z
    OVER	//  x z y
    WHILE:<{
      2DUP	//  x z y z y
      LESS	//  x z y _13
    }>DO<{	//  x z y
      DROP	//  x z
      s0 s1 s0 PUSH3	//  x z y x z
      DIV	//  x z y _14
      ROT	//  x y _14 z
      ADD	//  x y _15
      1 RSHIFT#	//  x y z
      SWAP	//  x z y
    }>	//  x z y
    2 1 BLKDROP2	//  y
  }>
  avg PROCREF:<{
    //  x y
    ADD	//  _2
    1 RSHIFT#	//  _4
  }>
  exp PROCREF:<{
    //  x
    DUP	//  x x
    -1 GTINT	//  x _2
    IF:<{	//  x
      POW2	//  _3
    }>ELSE<{	//  x
      1 PUSHINT	//  x _6=1
      SWAP	//  _6=1 x
      NEGATE	//  _6=1 _8
      RSHIFT	//  _3
    }>
  }>
  log2 PROCREF:<{
    //  x
    0 PUSHINT	//  x n=0
    7 PUSHPOW2	//  x n=0 _3=128
    exp INLINECALLDICT	//  x n=0 _4
    s2 s(-1) PUXC	//  x n=0 x _4
    GEQ	//  x n=0 _5
    IF:<{	//  x n=0
      DROP	//  x
      128 RSHIFT#	//  x
      7 PUSHPOW2	//  x n
    }>	//  x n
    64 PUSHINT	//  x n _10=64
    exp INLINECALLDICT	//  x n _11
    s2 s(-1) PUXC	//  x n x _11
    GEQ	//  x n _12
    IF:<{	//  x n
      SWAP	//  n x
      64 RSHIFT#	//  n x
      SWAP	//  x n
      64 ADDCONST	//  x n
    }>	//  x n
    32 PUSHINT	//  x n _17=32
    exp INLINECALLDICT	//  x n _18
    s2 s(-1) PUXC	//  x n x _18
    GEQ	//  x n _19
    IF:<{	//  x n
      SWAP	//  n x
      32 RSHIFT#	//  n x
      SWAP	//  x n
      32 ADDCONST	//  x n
    }>	//  x n
    16 PUSHINT	//  x n _24=16
    exp INLINECALLDICT	//  x n _25
    s2 s(-1) PUXC	//  x n x _25
    GEQ	//  x n _26
    IF:<{	//  x n
      SWAP	//  n x
      16 RSHIFT#	//  n x
      SWAP	//  x n
      16 ADDCONST	//  x n
    }>	//  x n
    8 PUSHINT	//  x n _31=8
    exp INLINECALLDICT	//  x n _32
    s2 s(-1) PUXC	//  x n x _32
    GEQ	//  x n _33
    IF:<{	//  x n
      SWAP	//  n x
      8 RSHIFT#	//  n x
      SWAP	//  x n
      8 ADDCONST	//  x n
    }>	//  x n
    4 PUSHINT	//  x n _38=4
    exp INLINECALLDICT	//  x n _39
    s2 s(-1) PUXC	//  x n x _39
    GEQ	//  x n _40
    IF:<{	//  x n
      SWAP	//  n x
      4 RSHIFT#	//  n x
      SWAP	//  x n
      4 ADDCONST	//  x n
    }>	//  x n
    2 PUSHINT	//  x n _45=2
    exp INLINECALLDICT	//  x n _46
    s2 s(-1) PUXC	//  x n x _46
    GEQ	//  x n _47
    IF:<{	//  x n
      SWAP	//  n x
      2 RSHIFT#	//  n x
      SWAP	//  x n
      2 ADDCONST	//  x n
    }>	//  x n
    1 PUSHINT	//  x n _52=1
    exp INLINECALLDICT	//  x n _53
    s1 s2 XCHG	//  n x _53
    GEQ	//  n _54
    IF:<{	//  n
      INC	//  n
    }>	//  n
  }>
  load_bounced_sender PROC:<{
    //  in_msg
    CTOS	//  in_msg
    4 LDU	//  _4 in_msg
    SWAP
    1 PUSHINT	//  in_msg _4 _7=1
    AND	//  in_msg b
    SWAP	//  b in_msg
    LDMSGADDR	//  b _14 _13
    DROP	//  b _9
  }>
  load_flags_sender PROC:<{
    //  in_msg
    CTOS	//  in_msg
    4 LDU	//  flags in_msg
    OVER
    2 PUSHINT	//  flags in_msg flags _7=2
    AND	//  flags in_msg _8
    s0 s2 XCHG
    1 PUSHINT	//  _8 in_msg flags _9=1
    AND	//  _8 in_msg _10
    SWAP	//  _8 _10 in_msg
    LDMSGADDR	//  _8 _10 _16 _15
    DROP	//  _8 _10 _11
  }>
  send_to_rbounceable PROCREF:<{
    //  packed_mode bounce dest value a m
    //  mode bounce dest value a m
    NEWC	//  mode bounce dest value a m _8
    -ROT	//  mode bounce dest value _8 a m
    2 1 CALLXARGS	//  mode bounce dest value _9
    ENDC	//  mode bounce dest value _10
    1 PUSHINT	//  mode bounce dest value _10 _11=1
    16 PUSHINT	//  mode bounce dest value _10 _11=1 _12=16
    s0 s5 XCHG	//  mode _12=16 dest value _10 _11=1 bounce
    IF:<{	//  mode _12=16 dest value _10 _11=1
      8 PUSHINT	//  mode _12=16 dest value _10 _11=1 _13=8
    }>ELSE<{	//  mode _12=16 dest value _10 _11=1
      0 PUSHINT	//  mode _12=16 dest value _10 _11=1 _13=0
    }>
    s1 s5 XCHG	//  mode _11=1 dest value _10 _12=16 _13
    OR	//  mode _11=1 dest value _10 _16
    NEWC	//  mode _11=1 dest value _10 _16 _17
    6 STU	//  mode _11=1 dest value _10 _19
    s0 s3 XCHG2	//  mode _11=1 _10 value _19 dest
    STSLICER	//  mode _11=1 _10 value _20
    SWAP	//  mode _11=1 _10 _20 value
    STVARUINT16	//  mode _11=1 _10 _21
    s1 s2 XCHG	//  mode _10 _11=1 _21
    107 STU	//  mode _10 _23
    STREF	//  mode _24
    ENDC	//  mode _25
    SWAP	//  _25 mode
    SENDRAWMSG
  }>
  send_to PROCREF:<{
    //  packed_mode dest value a m
    0 PUSHINT	//  packed_mode dest value a m _5=0
    4 -ROLL	//  packed_mode _5=0 dest value a m
    send_to_rbounceable INLINECALLDICT
  }>
  send_text PROCREF:<{
    //  packed_mode dest value body
    //  mode dest value body
    0 PUSHINT	//  mode dest value body _6=0
    16 PUSHINT	//  mode dest value body _6=0 _7=16
    NEWC	//  mode dest value body _6=0 _7=16 _8
    6 STU	//  mode dest value body _6=0 _10
    s0 s4 XCHG2	//  mode _6=0 value body _10 dest
    STSLICER	//  mode _6=0 value body _11
    ROT	//  mode _6=0 body _11 value
    STVARUINT16	//  mode _6=0 body _12
    s1 s2 XCHG	//  mode body _6=0 _12
    139 STU	//  mode body _16
    SWAP	//  mode _16 body
    STSLICER	//  mode _17
    ENDC	//  mode _18
    SWAP	//  _18 mode
    SENDRAWMSG
  }>
  mode::forward_value PROCREF:<{
    // 
    64 PUSHINT	//  _0=64
  }>
  mode::pay_transfer PROCREF:<{
    // 
    1 PUSHINT	//  _0=1
  }>
  mode::destroy_into PROCREF:<{
    // 
    7 PUSHPOW2	//  _1=128
  }>
  job::ld_tag PROCREF:<{
    //  v
    2 LDU	//  _4 _3
    SWAP	//  _3 _4
  }>
  job::ld_unlocked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    64 LDU	//  _1 _3 v
    LDREF	//  _1 _3 _6 v
  }>
  offer::ld_tag PROCREF:<{
    //  v
    2 LDU	//  _4 _3
    SWAP	//  _3 _4
  }>
  offer::ld_unlocked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
    256 LDSLICE	//  _1 _3 _5 _8 _10 v
    160 PLDU	//  _1 _3 _5 _8 _10 _14
  }>
  job::ld_msg_lock_on PROCREF:<{
    //  v
    LDREF	//  _1 v
  }>
  job::st_msg_collapse PROCREF:<{
    //  v add_args
    DROP	//  v
    c4 PUSH	//  v _3
    HASHCU	//  v order_hash
    160 PUSHPOW2DEC	//  v order_hash _9
    AND	//  v order_hash
    177 PUSHINT
    ROT	//  order_hash _12=177 v
    32 STU	//  order_hash v
    160 STU	//  v
  }>
  job::st_locked PROCREF:<{
    //  v offer unlocked
    -ROT	//  unlocked v offer
    STSLICER	//  unlocked v
    SWAP	//  v unlocked
    STSLICER	//  v
  }>
  job::ld_locked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
  }>
  offer::ld_msg_collapse PROCREF:<{
    //  v
    160 PLDU	//  _2
  }>
  offer::st_msg_take_stake PROCREF:<{
    //  v stake
    1886156135 PUSHINT
    ROT	//  stake _3=1886156135 v
    32 STU	//  stake v
    LTIME	//  stake v _7
    SWAP	//  stake _7 v
    64 STU	//  stake v
    STGRAMS	//  v
    0 PUSHINT	//  v _13=0
    SWAP	//  _13=0 v
    1 STU	//  v
  }>
  offer::st_locked PROCREF:<{
    //  v unlocked
    STSLICER	//  v
  }>
  offer::ld_locked PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    64 LDU	//  _1 _3 _5 v
    LDREF	//  _1 _3 _5 _8 v
    256 LDSLICE	//  _1 _3 _5 _8 _10 v
  }>
  offer::st_msg_unplug PROCREF:<{
    //  v
    1685288050 PUSHINT	//  v _3=1685288050
    SWAP	//  _3=1685288050 v
    32 STU	//  v
    LTIME	//  v _7
    SWAP	//  _7 v
    64 STU	//  v
  }>
  offer::st_msg_lock_success PROCREF:<{
    //  v add_args
    UNTRIPLE	//  v worker desc worker_key
    173 PUSHINT	//  v worker desc worker_key _7=173
    s0 s4 XCHG2	//  worker_key worker desc _7=173 v
    32 STU	//  worker_key worker desc v
    ROT	//  worker_key desc v worker
    STSLICER	//  worker_key desc v
    SWAP	//  worker_key v desc
    STREFR	//  worker_key v
    SWAP	//  v worker_key
    STSLICER	//  v
  }>
  job::ld_msg_lock_success PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDREF	//  _1 _3 v
  }>
  offer::st_msg_lock_failed PROCREF:<{
    //  v add_args
    DROP	//  v
    212 PUSHINT	//  v _3=212
    SWAP	//  _3=212 v
    32 STU	//  v
  }>
  offer::st_unlocked PROCREF:<{
    //  v job worker stake desc worker_key short_job_hash
    s6 s5 XCHG2	//  worker_key short_job_hash worker stake desc v job
    STSLICER	//  worker_key short_job_hash worker stake desc v
    s0 s3 XCHG2	//  worker_key short_job_hash desc stake v worker
    STSLICER	//  worker_key short_job_hash desc stake v
    64 STU	//  worker_key short_job_hash desc v
    SWAP	//  worker_key short_job_hash v desc
    STREFR	//  worker_key short_job_hash v
    ROT	//  short_job_hash v worker_key
    STSLICER	//  short_job_hash v
    160 STU	//  v
  }>
  job::st_unlocked PROCREF:<{
    //  v locked_without_offer
    STSLICER	//  v
  }>
  job::st_working PROCREF:<{
    //  v poster worker value poster_desc worker_desc poster_key worker_key
    s7 s6 XCHG2	//  poster_key worker_key worker value poster_desc worker_desc v poster
    STSLICER	//  poster_key worker_key worker value poster_desc worker_desc v
    s0 s4 XCHG2	//  poster_key worker_key worker_desc value poster_desc v worker
    STSLICER	//  poster_key worker_key worker_desc value poster_desc v
    s1 s2 XCHG	//  poster_key worker_key worker_desc poster_desc value v
    64 STU	//  poster_key worker_key worker_desc poster_desc v
    SWAP	//  poster_key worker_key worker_desc v poster_desc
    STREFR	//  poster_key worker_key worker_desc v
    SWAP	//  poster_key worker_key v worker_desc
    STREFR	//  poster_key worker_key v
    NEWC	//  poster_key worker_key v _20
    s0 s3 XCHG2	//  v worker_key _20 poster_key
    STSLICER	//  v worker_key _21
    SWAP	//  v _21 worker_key
    STSLICER	//  v _22
    x{233AD31DA6B7979BA0DC8E4C4FB944639EF447B6ACAD5071BFB466E88FF6F6FB} PUSHSLICE	//  v _22 _23
    STSLICER	//  v _24
    ENDC	//  v _25
    STREFR	//  v
  }>
  job::ld_working_main PROCREF:<{
    //  v
    LDMSGADDR	//  _1 v
    LDMSGADDR	//  _1 _3 v
    2 PUSHINT	//  _1 _3 v _5=2
    PLDREFVAR	//  _1 _3 _6
  }>
  job::wrap_for_signing PROCREF:<{
    //  worker_ton_min worker_ton_max
    NEWC	//  worker_ton_min worker_ton_max _2
    x{FFFF726C3A3A6A6F623A3A7630} PUSHSLICE	//  worker_ton_min worker_ton_max _2 _3
    STSLICER	//  worker_ton_min worker_ton_max _4
    s1 s2 XCHG	//  worker_ton_max worker_ton_min _4
    64 STU	//  worker_ton_max _6
    64 STU	//  _8
    ENDC	//  _9
    CTOS	//  _10
  }>
  job::parse_proposal_with_tag PROCREF:<{
    //  v
    2 LDU	//  tag v
    OVER	//  tag v tag
    3 EQINT	//  tag v _6
    IFJMP:<{	//  tag v
      2DROP	// 
      1652841508 PUSHINT	//  _8=1652841508
      CONFIGOPTPARAM	//  c
      DUP	//  c c
      ISNULL	//  c _11
      200 THROWIF
      MYADDR	//  c _14
      SWAP
      267 PUSHINT	//  _14 c _15=267
      DICTGET
      NULLSWAPIFNOT	//  v success
      200 THROWIFNOT
      3 PUSHINT	//  v _19=3
      PUSHNULL	//  v _19=3 _20
      s0 s2 XCHG	//  _20 _19=3 v
      64 LDU	//  _20 _19=3 _21 v
      64 LDU	//  _20 _19=3 _21 _43 _42
      DROP	//  _20 _19=3 _21 _24
      s2 s3 XCHG	//  _19=3 _20 _21 _24
    }>	//  tag v
    9 PUSHPOW2	//  tag v _28=512
    LDSLICEX	//  tag _27 v
    64 LDU	//  tag _27 _30 v
    64 LDU	//  tag _27 _30 _49 _48
    DROP	//  tag _27 _30 _33
  }>
  job::parse_finish_message PROCREF:<{
    //  v
    LDREF	//  _1 v
    SWAP	//  v _1
    CTOS	//  v _3
    SWAP	//  _3 v
    PLDREF	//  _3 _4
    CTOS	//  _3 _5
  }>
  parse_proposal_check_sig PROCREF:<{
    //  v keys
    DROP	//  v
    job::parse_proposal_with_tag INLINECALLDICT	//  _18 _19 _20 _21
    s2 POP	//  tag ub lb
    s2 PUSH	//  tag ub lb tag
    3 NEQINT	//  tag ub lb _8
    IF:<{	//  tag ub lb
    }>	//  tag ub lb
    SWAP	//  tag lb ub
  }>
  get_job_state PROC:<{
    // 
    c4 PUSH	//  _0
    CTOS	//  _1
    2 PLDU	//  _3
  }>
  waiting_message_from PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  own_data
    2 PUSHINT	//  own_data _4=2
    SDSKIPFIRST	//  own_data
    LDMSGADDR	//  _9 _8
    DROP	//  _6
  }>
  get_job_description PROC:<{
    // 
    c4 PUSH	//  _0
    CTOS	//  _1
    PLDREF	//  _2
  }>
  get_job_value PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  own_data
    2 LDU	//  tag own_data
    SWAP	//  own_data tag
    IF:<{	//  own_data
      LDMSGADDR	//  _17 _16
      NIP	//  own_data
    }>	//  own_data
    LDMSGADDR	//  _19 _18
    NIP	//  own_data
    64 LDU	//  _21 _20
    DROP	//  _11
  }>
  get_job_poster PROC:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  own_data
    2 LDU	//  tag own_data
    SWAP	//  own_data tag
    IF:<{	//  own_data
      LDMSGADDR	//  _14 _13
      NIP	//  own_data
    }>	//  own_data
    LDMSGADDR	//  _16 _15
    DROP	//  _9
  }>
  recv_internal PROC:<{
    SAMEALTSAVE	//  msg_value in_msg in_msg_body
    DUP	//  msg_value in_msg in_msg_body in_msg_body
    SBITS	//  msg_value in_msg in_msg_body _3
    32 LESSINT	//  msg_value in_msg in_msg_body _5
    IFJMP:<{	//  msg_value in_msg in_msg_body
      3 BLKDROP	// 
    }>	//  msg_value in_msg in_msg_body
    SWAP	//  msg_value in_msg_body in_msg
    load_bounced_sender CALLDICT	//  msg_value in_msg_body bounced sender
    SWAP	//  msg_value in_msg_body sender bounced
    IFJMP:<{	//  msg_value in_msg_body sender
      3 BLKDROP	// 
    }>	//  msg_value in_msg_body sender
    SWAP	//  msg_value sender in_msg_body
    32 LDU	//  msg_value sender op in_msg_body
    c4 PUSH	//  msg_value sender op in_msg_body _14
    CTOS	//  msg_value sender op in_msg_body own_data
    2 LDU	//  msg_value sender op in_msg_body tag own_data
    OVER	//  msg_value sender op in_msg_body tag own_data tag
    0 EQINT	//  msg_value sender op in_msg_body tag own_data _21
    IF:<{	//  msg_value sender op in_msg_body tag own_data
      NIP	//  msg_value sender op in_msg_body own_data
      s2 PUSH
      235 PUSHINT	//  msg_value sender op in_msg_body own_data op _22=235
      EQUAL	//  msg_value sender op in_msg_body own_data _23
      IFJMP:<{	//  msg_value sender op in_msg_body own_data
        s4 POP
        2DROP	//  own_data sender
        TUCK	//  sender own_data sender
        SDPFXREV	//  sender _25
        200 THROWIFNOT
        mode::destroy_into INLINECALLDICT	//  sender _27
        SWAP
        0 PUSHINT
        x{4a6f622064657374726f7965642e} PUSHSLICE	//  _27 sender _28=0 _29
        send_text INLINECALLDICT
        RETALT
      }>	//  msg_value sender op in_msg_body own_data
      s0 s2 XCHG
      172 PUSHINT	//  msg_value sender own_data in_msg_body op _31=172
      EQUAL	//  msg_value sender own_data in_msg_body _32
      IFJMP:<{	//  msg_value sender own_data in_msg_body
        s1 s2 PUXC	//  msg_value in_msg_body own_data own_data sender
        SDPFXREV	//  msg_value in_msg_body own_data _34
        200 THROWIFNOT
        s0 s2 XCHG
        1000000000 PUSHINT	//  own_data in_msg_body msg_value _37=1000000000
        LESS	//  own_data in_msg_body _38
        199 THROWIFNOT
        job::ld_msg_lock_on INLINECALLDICT	//  own_data _139 _140
        NIP	//  own_data offer_addr
        mode::forward_value INLINECALLDICT	//  own_data offer_addr _43
        0 PUSHINT	//  own_data offer_addr _43 _44=0
        PUSHNULL	//  own_data offer_addr _43 _44=0 _45
        CONT:<{
          job::st_msg_collapse CALLDICT
        }>	//  own_data offer_addr _43 _44=0 _45 _46
        s4 PUSH
        3 -ROLL	//  own_data offer_addr _43 offer_addr _44=0 _45 _46
        send_to INLINECALLDICT
        1 PUSHINT	//  own_data offer_addr _48=1
        NEWC	//  own_data offer_addr _48=1 _49
        2 STU	//  own_data offer_addr _51
        s0 s2 XCHG	//  _51 offer_addr own_data
        job::st_locked INLINECALLDICT	//  _52
        ENDC	//  _53
        c4 POP
        RETALT
      }>	//  msg_value sender own_data in_msg_body
      4 BLKDROP	// 
    }>ELSE<{	//  msg_value sender op in_msg_body tag own_data
      s5 POP	//  own_data sender op in_msg_body tag
      DUP	//  own_data sender op in_msg_body tag tag
      1 EQINT	//  own_data sender op in_msg_body tag _56
      IF:<{	//  own_data sender op in_msg_body tag
        DROP	//  own_data sender op in_msg_body
        OVER
        173 PUSHINT	//  own_data sender op in_msg_body op _57=173
        EQUAL	//  own_data sender op in_msg_body _58
        IFJMP:<{	//  own_data sender op in_msg_body
          NIP	//  own_data sender in_msg_body
          s0 s2 XCHG	//  in_msg_body sender own_data
          job::ld_locked INLINECALLDICT	//  in_msg_body sender offer poster value poster_desc poster_key
          s4 s5 XCHG2	//  in_msg_body poster_key poster_desc poster value offer sender
          SDEQ	//  in_msg_body poster_key poster_desc poster value _66
          200 THROWIFNOT
          s0 s4 XCHG	//  value poster_key poster_desc poster in_msg_body
          job::ld_msg_lock_success INLINECALLDICT	//  value poster_key poster_desc poster worker worker_desc worker_key
          2 PUSHINT	//  value poster_key poster_desc poster worker worker_desc worker_key _72=2
          NEWC	//  value poster_key poster_desc poster worker worker_desc worker_key _72=2 _73
          2 STU	//  value poster_key poster_desc poster worker worker_desc worker_key _75
          s0 s7 XCHG
          s4 s6 XCHG
          s3 s5 XCHG
          s4 s4 XCHG2	//  _75 poster worker value poster_desc worker_desc poster_key worker_key
          job::st_working INLINECALLDICT	//  _76
          ENDC	//  _77
          c4 POP
          RETALT
        }>	//  own_data sender op in_msg_body
        DROP	//  own_data sender op
        212 PUSHINT	//  own_data sender op _79=212
        EQUAL	//  own_data sender _80
        IFJMP:<{	//  own_data sender
          SWAP	//  sender own_data
          LDMSGADDR	//  sender _82 own_data
          -ROT	//  own_data sender _82
          SDEQ	//  own_data _84
          200 THROWIFNOT
          0 PUSHINT	//  own_data _86=0
          NEWC	//  own_data _86=0 _87
          2 STU	//  own_data _89
          SWAP	//  _89 own_data
          job::st_unlocked INLINECALLDICT	//  _90
          ENDC	//  _91
          c4 POP
          RETALT
        }>	//  own_data sender
        2DROP	// 
      }>ELSE<{	//  own_data sender op in_msg_body tag
        s3 POP	//  own_data tag op in_msg_body
        s0 s2 XCHG	//  own_data in_msg_body op tag
        2 EQINT	//  own_data in_msg_body op _94
        IF:<{	//  own_data in_msg_body op
          187 PUSHINT	//  own_data in_msg_body op _95=187
          EQUAL	//  own_data in_msg_body _96
          IFJMP:<{	//  own_data in_msg_body
            SWAP	//  in_msg_body own_data
            job::ld_working_main INLINECALLDICT	//  in_msg_body poster worker keys
            CTOS	//  in_msg_body poster worker keys
            s0 s3 XCHG	//  keys poster worker in_msg_body
            job::parse_finish_message INLINECALLDICT	//  keys poster worker a b
            s1 s4 XCPU	//  keys poster worker b a keys
            parse_proposal_check_sig INLINECALLDICT	//  keys poster worker b tag_a al au
            s3 s6 XCHG2	//  au poster worker al tag_a b keys
            parse_proposal_check_sig INLINECALLDICT	//  au poster worker al tag_a tag_b bl bu
            2SWAP	//  au poster worker al bl bu tag_a tag_b
            EQUAL	//  au poster worker al bl bu _115
            200 THROWIF
            -ROT	//  au poster worker bu al bl
            MAX	//  au poster worker bu nton_min
            s4 s4 XCHG2	//  nton_min poster worker au bu
            MIN	//  nton_min poster worker nton_max
            s3 s3 XCPU	//  nton_max poster worker nton_min nton_max
            GREATER	//  nton_max poster worker _122
            200 THROWIF
            mode::pay_transfer INLINECALLDICT	//  nton_max poster worker _124
            s0 s1 s3 XCHG3
            x{4a6f6220636f6d706c6574656421} PUSHSLICE	//  poster _124 worker nton_max _125
            send_text INLINECALLDICT
            mode::destroy_into INLINECALLDICT	//  poster _127
            SWAP
            0 PUSHINT
            x{4a6f622066696e69736865642e} PUSHSLICE	//  _127 poster _128=0 _129
            send_text INLINECALLDICT
            RETALT
          }>	//  own_data in_msg_body
          2DROP	// 
        }>ELSE<{
          3 BLKDROP	// 
        }>
      }>
    }>
    16 PUSHPOW2DEC	//  _131=65535
    THROWANY
  }>
}END>c

boc>B "build/boc/contract-job.boc" B>file